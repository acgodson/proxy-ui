/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { CustomRouter, CustomRouterInterface } from "../CustomRouter";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_wormholeRelayer",
        type: "address",
        internalType: "address",
      },
      {
        name: "_tokenBridge",
        type: "address",
        internalType: "address",
      },
      {
        name: "_wormhole",
        type: "address",
        internalType: "address",
      },
      {
        name: "_controller",
        type: "address",
        internalType: "address",
      },
      {
        name: "_controllerVault",
        type: "address",
        internalType: "address",
      },
      {
        name: "_token",
        type: "address",
        internalType: "address",
      },
      {
        name: "_controllerChainId",
        type: "uint16",
        internalType: "uint16",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "controller",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "controllerChainId",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint16",
        internalType: "uint16",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "controllerVault",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "depositToFeeTank",
    inputs: [
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "feeTank",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "generateKey",
    inputs: [
      {
        name: "requestHash",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "fixedNonce",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "operationType",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "idempotencyKeyToTokenAmount",
    inputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "quoteCrossChainMessage",
    inputs: [
      {
        name: "targetChain",
        type: "uint16",
        internalType: "uint16",
      },
    ],
    outputs: [
      {
        name: "cost",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "registerAdmin",
    inputs: [
      {
        name: "admin",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "routerAdmins",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "setController",
    inputs: [
      {
        name: "_controller",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setControllerChainId",
    inputs: [
      {
        name: "_controllerChainId",
        type: "uint16",
        internalType: "uint16",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setControllerVault",
    inputs: [
      {
        name: "_controllerVault",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setRegisteredSender",
    inputs: [
      {
        name: "sourceChain",
        type: "uint16",
        internalType: "uint16",
      },
      {
        name: "sourceAddress",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "submitReceipt",
    inputs: [
      {
        name: "idempotencyKey",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "usedTokens",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "token",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IERC20",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "tokenBridge",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract ITokenBridge",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "withdrawFromFeeTank",
    inputs: [
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "wormhole",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IWormhole",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "wormholeRelayer",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IWormholeRelayer",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ReceiptProcessed",
    inputs: [
      {
        name: "idempotencyKey",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "usedTokens",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
] as const;

const _bytecode =
  "0x60e03461019b57601f6116d638819003918201601f19168301916001600160401b038311848410176101a05780849260e09460405283398101031261019b57610047816101b6565b90610054602082016101b6565b90610061604082016101b6565b9161006e606083016101b6565b61007a608084016101b6565b9360c061008960a086016101b6565b9401519461ffff8616860361019b5760005496879360018060a01b03809681809681809660018060a01b03199a8b339116176000556040519e823391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3166080521660a052338760015416176001551660c052168360035416176003551690600454161760045560055491169161ffff60a01b9060a01b169060018060b01b031916171760055561150b90816101cb823960805181818161043f0152818161088b015281816109410152818161102801526112c9015260a0518181816106ca015281816107b70152610cdf015260c0518181816104840152818161065c0152818161076701526108100152f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b038216820361019b5756fe6080604052600436101561001257600080fd5b60003560e01c806321148577146111975780632b89ff9514611155578063360505391461112c578063371b0c3b14610ef7578063510cd61c14610eb957806352dabd0a14610d92578063715018a614610d395780637563607b14610d0e57806384acd1bb14610cc95780638a147a6f14610c865780638da5cb5b14610c5d57806392eefe9b14610c17578063ad9818621461054d578063bb87b71b14610528578063c30f39b6146104fc578063c38c5813146104b3578063c6328a461461046e578063da25b72514610429578063dd12d68b14610393578063f2fde38b146102cd578063f77c4791146102a4578063faccafe9146101475763fc0c546a1461011957600080fd5b34610142576000366003190112610142576005546040516001600160a01b039091168152602090f35b600080fd5b346101425760208060031936011261014257600435336000526007825260ff604060002054161561025f573360005260068252806040600020541061022357816101df60009233845260068352604084206101a3828254611322565b905560055460405163a9059cbb60e01b81523360048201526024810192909252909384926001600160a01b039092169183919082906044820190565b03925af18015610217576101ef57005b8161020e92903d10610210575b6102068183611249565b81019061126b565b005b503d6101fc565b6040513d6000823e3d90fd5b60405162461bcd60e51b8152600481018390526014602482015273496e73756666696369656e74207265736572766560601b6044820152606490fd5b60405162461bcd60e51b815260048101839052601760248201527f4f6e6c792061646d696e2063616e2077697468647261770000000000000000006044820152606490fd5b34610142576000366003190112610142576003546040516001600160a01b039091168152602090f35b34610142576020366003190112610142576004356001600160a01b0381811691829003610142576102fc61132f565b811561033f57600054826001600160601b0360a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b34610142576040366003190112610142576103ac6111dd565b6001546001600160a01b031633036103d85761ffff166000526002602052602435604060002055600080f35b60405162461bcd60e51b8152602060048201526024808201527f4e6f7420616c6c6f77656420746f207365742072656769737465726564207365604482015263373232b960e11b6064820152608490fd5b34610142576000366003190112610142576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b34610142576000366003190112610142576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b34610142576020366003190112610142576004356001600160a01b03811690819003610142576104e161132f565b6000908152600760205260409020805460ff19166001179055005b346101425760203660031901126101425760043560005260086020526020604060002054604051908152f35b3461014257600036600319011261014257602061ffff60055460a01c16604051908152f35b60403660031901126101425760043560005260086020526040600020548015610bc2578060243511610b735761059661058e61ffff60055460a01c16611299565b3410156113c7565b6024358111610b45575b50600554604051306020820152600435604082015260018060a01b03821660608201526024356080820152608081526105d88161122d565b600454604080516001600160a01b039092169290820182811067ffffffffffffffff821117610b18576040526001825260005b60208110610b2e575061061c611493565b5060405180602081011067ffffffffffffffff602083011117610b1857602081016040526000815261064c611493565b5060405163095ea7b360e01b81527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316600482015260248035908201526020818060448101038160006001600160a01b038b165af1801561021757610af9575b50604051631a90a21960e01b81526020816004817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa90811561021757600091610ac5575b506040516362d2f5ed60e11b81526001600160a01b0387166004820152602480359082015260a087901c61ffff166044820152606481018690526000608482015260c060a4820152916020918391829081906107639060c4830190611387565b03917f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af190811561021757600091610aa6575b50604051634d4502c960e11b8152906020826004817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa91821561021757600092610a5f575b5067ffffffffffffffff9061ffff6040519361080b85611211565b1683527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316602084015216604082015261084c836114b2565b52610856826114b2565b506040805163c23ee3c360e01b815260a086901c61ffff166004820152600060248201526203d09060448201529390846064817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa93841561021757600094610a27575b5060405163329a2be760e01b815260a09590951c61ffff166004860152602485015260c060448501528391906108fe9060c4840190611387565b600060648401526203d09060848401526003198382030160a48401526020808351928381520192019060005b8181106109e95750602094928490039284925090507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af18015610217576109ba575b60043560005260086020526000604081205560405160243581527f451a3310a7bd3d12522d108ff5804713826c1fe8cbf3dd8e23f1f804065f7b20602060043592a2005b6109db9060203d6020116109e2575b6109d38183611249565b810190611428565b5080610976565b503d6109c9565b919350916020606060019267ffffffffffffffff6040885161ffff81511684528581015186850152015116604082015201940191019185939261092a565b6108fe92919450610a4f9060403d604011610a58575b610a478183611249565b810190611283565b509390916108c4565b503d610a3d565b9091506020813d602011610a9e575b81610a7b60209383611249565b81010312610142575161ffff81168103610142579067ffffffffffffffff6107f0565b3d9150610a6e565b610abf915060203d6020116109e2576109d38183611249565b856107a0565b90506020813d602011610af1575b81610ae060209383611249565b810103126101425751610763610703565b3d9150610ad3565b610b119060203d602011610210576102068183611249565b50856106b4565b634e487b7160e01b600052604160045260246000fd5b602090610b39611493565b8282860101520161060b565b610b529060243590611322565b336000526006602052610b6b60406000209182546111ee565b9055806105a0565b60405162461bcd60e51b815260206004820152602160248201527f5573656420746f6b656e732063616e6e6f7420657863656564206d61782066656044820152606560f81b6064820152608490fd5b60405162461bcd60e51b815260206004820152602760248201527f4e6f20746f6b656e732068656c6420666f722074686973206964656d706f74656044820152666e6379206b657960c81b6064820152608490fd5b34610142576020366003190112610142576004356001600160a01b0381169081900361014257610c4561132f565b6001600160601b0360a01b6003541617600355600080f35b34610142576000366003190112610142576000546040516001600160a01b039091168152602090f35b34610142576020366003190112610142576004356001600160a01b03811690819003610142576000526007602052602060ff604060002054166040519015158152f35b34610142576000366003190112610142576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b34610142576020366003190112610142576020610d31610d2c6111dd565b611299565b604051908152f35b3461014257600036600319011261014257610d5261132f565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346101425760208060031936011261014257600435336000526007825260ff6040600020541615610e7b57816000913383526006825260408320610dd78282546111ee565b90556005546040516323b872dd60e01b815233600482015230602482015260448101929092529092839160649183916001600160a01b03165af190811561021757600091610e5e575b5015610e2857005b6064906040519062461bcd60e51b82526004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b6044820152fd5b610e759150823d8411610210576102068183611249565b82610e20565b60405162461bcd60e51b815260048101839052601660248201527513db9b1e4818591b5a5b8818d85b8819195c1bdcda5d60521b6044820152606490fd5b34610142576020366003190112610142576004356001600160a01b038116908190036101425760005260066020526020604060002054604051908152f35b60603660031901126101425760043560243560443560405192610f59610f67602095338782015283604082015284606082015285608082015260808152610f3d8161122d565b6040519283916000898401526040808401526060830190611387565b03601f198101835282611249565b61ffff610f7a8160055460a01c16611299565b93610f87853410156113c7565b600381101561111657610f9990611448565b93336000526006875284604060002054106110c1579186916110149333600052600684526040600020610fcd888254611322565b905560018060a01b039160055460a01c1690826003541691604051968795869485936347f66e8160e11b85526004850152602484015260a0604484015260a4830190611387565b600060648301526203d090608483015203927f0000000000000000000000000000000000000000000000000000000000000000165af18015610217576110a4575b5060405192848401913360601b83526034850152605484015260548352608083019280841067ffffffffffffffff851117610b1857836040525190209081600052600884526040600020558152f35b6110ba90853d87116109e2576109d38183611249565b5084611055565b60405162461bcd60e51b815260048101889052602760248201527f496e73756666696369656e7420746f6b656e20666f72207365727669636520206044820152661c185e5b595b9d60ca1b6064820152608490fd5b634e487b7160e01b600052602160045260246000fd5b34610142576000366003190112610142576004546040516001600160a01b039091168152602090f35b346101425760203660031901126101425761116e6111dd565b61117661132f565b6005805461ffff60a01b191660a09290921b61ffff60a01b16919091179055005b34610142576020366003190112610142576004356001600160a01b03811690819003610142576111c561132f565b6001600160601b0360a01b6004541617600455600080f35b6004359061ffff8216820361014257565b919082018092116111fb57565b634e487b7160e01b600052601160045260246000fd5b6060810190811067ffffffffffffffff821117610b1857604052565b60a0810190811067ffffffffffffffff821117610b1857604052565b90601f8019910116810190811067ffffffffffffffff821117610b1857604052565b90816020910312610142575180151581036101425790565b9190826040910312610142576020825192015190565b6040805163c23ee3c360e01b815261ffff929092166004830152600060248301526203d0906044830152816064817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa90811561021757600091611305575090565b61131e915060403d604011610a5857610a478183611249565b5090565b919082039182116111fb57565b6000546001600160a01b0316330361134357565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b919082519283825260005b8481106113b3575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201611392565b156113ce57565b60405162461bcd60e51b815260206004820152602c60248201527f496e73756666696369656e74207061796d656e7420666f722063726f73732d6360448201526b6861696e206d65737361676560a01b6064820152608490fd5b90816020910312610142575167ffffffffffffffff811681036101425790565b6003811015611116578061146457506802b5e3af16b188000090565b6001810361147a575068056bc75e2d6310000090565b60021461148657600090565b680ad78ebc5ac620000090565b604051906114a082611211565b60006040838281528260208201520152565b8051156114bf5760200190565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220c2625c27c0ef5bdea24d959ac045cddc658576f3a6a09475073046d86712fb8664736f6c63430008190033";

type CustomRouterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CustomRouterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CustomRouter__factory extends ContractFactory {
  constructor(...args: CustomRouterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _wormholeRelayer: string,
    _tokenBridge: string,
    _wormhole: string,
    _controller: string,
    _controllerVault: string,
    _token: string,
    _controllerChainId: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<CustomRouter> {
    return super.deploy(
      _wormholeRelayer,
      _tokenBridge,
      _wormhole,
      _controller,
      _controllerVault,
      _token,
      _controllerChainId,
      overrides || {}
    ) as Promise<CustomRouter>;
  }
  override getDeployTransaction(
    _wormholeRelayer: string,
    _tokenBridge: string,
    _wormhole: string,
    _controller: string,
    _controllerVault: string,
    _token: string,
    _controllerChainId: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _wormholeRelayer,
      _tokenBridge,
      _wormhole,
      _controller,
      _controllerVault,
      _token,
      _controllerChainId,
      overrides || {}
    );
  }
  override attach(address: string): CustomRouter {
    return super.attach(address) as CustomRouter;
  }
  override connect(signer: Signer): CustomRouter__factory {
    return super.connect(signer) as CustomRouter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CustomRouterInterface {
    return new utils.Interface(_abi) as CustomRouterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CustomRouter {
    return new Contract(address, _abi, signerOrProvider) as CustomRouter;
  }
}
