/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ControllerVault,
  ControllerVaultInterface,
} from "../ControllerVault";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_wormholeRelayer",
        type: "address",
        internalType: "address",
      },
      {
        name: "_tokenBridge",
        type: "address",
        internalType: "address",
      },
      {
        name: "_wormhole",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "controller",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "receiveWormholeMessages",
    inputs: [
      {
        name: "payload",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "additionalVaas",
        type: "bytes[]",
        internalType: "bytes[]",
      },
      {
        name: "sourceAddress",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "sourceChain",
        type: "uint16",
        internalType: "uint16",
      },
      {
        name: "deliveryHash",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "routerDeposits",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "setController",
    inputs: [
      {
        name: "_controller",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setRegisteredSender",
    inputs: [
      {
        name: "sourceChain",
        type: "uint16",
        internalType: "uint16",
      },
      {
        name: "sourceAddress",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "tokenBridge",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract ITokenBridge",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "wormhole",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IWormhole",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "wormholeRelayer",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IWormholeRelayer",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "TokensWithdrawn",
    inputs: [
      {
        name: "router",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "token",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "NotAnEvmAddress",
    inputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
  },
] as const;

const _bytecode =
  "0x60e0346100eb57601f61168738819003918201601f19168301916001600160401b038311848410176100f0578084926060946040528339810103126100eb5761004781610106565b90610060604061005960208401610106565b9201610106565b6001600160a01b03928316608052821660a052600080546001600160a01b031916331790551660c05260405161156c908161011b82396080518181816101a40152610d5d015260a0518181816102b4015281816103f2015281816105a0015261090a015260c0518181816101e90152818161045e015281816104c30152818161054401526107750152f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036100eb5756fe6080604052600436101561001257600080fd5b6000803560e01c8063529dca32146102e357806384acd1bb1461029e57806392eefe9b14610218578063c6328a46146101d3578063da25b7251461018e578063dd12d68b146100f9578063f77c4791146100d05763fec825b81461007557600080fd5b346100cd5760403660031901126100cd5761008e6112f6565b6024356001600160a01b0381811693918490036100c857604092168152600360205220906000526020526020604060002054604051908152f35b600080fd5b80fd5b50346100cd57806003193601126100cd576002546040516001600160a01b039091168152602090f35b50346100cd5760403660031901126100cd5760043561ffff81168091036100c85781546001600160a01b0316330361013d5781526001602052602435604082205580f35b60405162461bcd60e51b8152602060048201526024808201527f4e6f7420616c6c6f77656420746f207365742072656769737465726564207365604482015263373232b960e11b6064820152608490fd5b50346100cd57806003193601126100cd576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50346100cd57806003193601126100cd576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50346100cd5760203660031901126100cd576102326112f6565b600254906001600160a01b03908183166102605716906bffffffffffffffffffffffff60a01b161760025580f35b60405162461bcd60e51b815260206004820152601660248201527510dbdb9d1c9bdb1b195c88185b1c9958591e481cd95d60521b6044820152606490fd5b50346100cd57806003193601126100cd576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5060a03660031901126100cd576004356001600160401b0381116110a75761030f903690600401611298565b602435916001600160401b0383116100cd57366023840112156100cd5782600401359261033b846112df565b93610349604051958661125c565b80855260051b8101602401602085013682116110be5760248301905b8282106111c6575050505060643561ffff8116036100cd57825192610389846112df565b93610397604051958661125c565b8085526103a6601f19916112df565b01825b818110611191575050815b8151811015610d56576103ee836103cb838561132f565b516040518093819263a9e1189360e01b83526020600484015260248301906113d9565b03817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa908115610a95578491610b12575b506080810151606082015160405163ad66a5f160e01b815261ffff9091166004820152906020826024816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa918215610980578692610ade575b5003610aa0578360e06104bf9201516040518093819263ea63738d60e01b83526020600484015260248301906113d9565b03817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa908115610a9557849161098b575b5030608082015114806108e0575b156108905761053f8461051c848661132f565b516040518093819263c3f511c160e01b83526020600484015260248301906113d9565b0381837f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af180156107fa5761084f575b5060608101516040808301519051634d4502c960e11b8152909161ffff16906020816004817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa8015610844578790610805575b61ffff16821415905061075057508060a01c610738576001600160a01b0316905b8480604051602081019063313ce56760e01b82526004815261061981611226565b5190855afa503d15610731573d61062f8161127d565b9061063d604051928361125c565b81523d86602083013e5b60208180518101031261072d5760206106609101611343565b60208201519060ff809116600881116106d7575b5050906001939291604082015192602061ffff606085015116930151926040519461069e866111f5565b85526020850152858060a01b03166040840152606083015260808201526106c5828861132f565b526106d0818761132f565b50016103b4565b60071901818111610719576106ec91166113fe565b9080828102048214811517156107055702600138610674565b634e487b7160e01b87526011600452602487fd5b634e487b7160e01b88526011600452602488fd5b8580fd5b6060610647565b6024906040519063033b960d60e41b82526004820152fd5b604051630ff8f14360e11b8152600481019190915260248101919091526020816044817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa9081156107fa5785916107b4575b50906105f8565b90506020813d6020116107f2575b816107cf6020938361125c565b810103126107ee57516001600160a01b03811681036107ee57386107ad565b8480fd5b3d91506107c2565b6040513d87823e3d90fd5b506020813d60201161083c575b8161081f6020938361125c565b810103126108385761083361ffff91611362565b6105d7565b8680fd5b3d9150610812565b6040513d89823e3d90fd5b3d8086833e61085e818361125c565b602082828101031261072d578151906001600160401b03821161083857610889929081019101611394565b5038610579565b60405162461bcd60e51b815260206004820152602260248201527f546f6b656e20776173206e6f742073656e7420746f2074686973206164647265604482015261737360f01b6064820152608490fd5b5060a0810151604051634d4502c960e11b815261ffff909116906020816004816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa8015610980578690610945575b61ffff91501614610509565b506020813d602011610978575b8161095f6020938361125c565b8101031261072d5761097361ffff91611362565b610939565b3d9150610952565b6040513d88823e3d90fd5b3d91508185823e61099c828261125c565b60208183810103126107ee578051916001600160401b03831161072d57610100838301828401031261072d5760405192836101008101106001600160401b0361010086011117610a815761010084016040526109f9818401611343565b84528281016020818101519086015260408082015190860152610a1e90606001611362565b6060850152608081840101516080850152610a3d60a082850101611362565b60a085015282810160c0818101519086015260e00151916001600160401b038311610a7d57610a729390810192910101611394565b60e0820152386104fb565b8780fd5b634e487b7160e01b87526041600452602487fd5b6040513d86823e3d90fd5b60405162461bcd60e51b81526020600482015260166024820152754e6f74206120546f6b656e204272696467652056414160501b6044820152606490fd5b9091506020813d602011610b0a575b81610afa6020938361125c565b8101031261072d5751903861048e565b3d9150610aed565b3d91508185823e610b23828261125c565b60208183810103126107ee578051906001600160401b03821161072d57610160828201848301031261072d5760405192836101608101106001600160401b0361016086011117610a81576101608401604052610b80838301611343565b8452610b90602084840101611351565b6020850152610ba3604084840101611351565b6040850152610bb6606084840101611362565b60608501528183016080818101519086015260a001516001600160401b0381168103610a7d5760a085015260c0610bf08185850101611343565b9085015260e083830101516001600160401b038111610a7d57610c1a908284019085850101611394565b60e0850152610100610c2f8185850101611351565b9085015261012083830101516001600160401b038111610a7d57818301601f8286860101011215610a7d57808484010151610c69816112df565b92610c77604051948561125c565b818452602084019281860160208460071b838a8a0101010111610d52576020818888010101935b60208460071b838a8a010101018510610cce5750505050506101208401520161014090810151908201523861042a565b6080858489010312610d4e576040518060808101106001600160401b03608083011117610d3a57608091818360209301604052875181528288015183820152610d1960408901611343565b6040820152610d2a60608901611343565b6060820152815201940193610c9e565b634e487b7160e01b8d52604160045260248dfd5b8b80fd5b8a80fd5b50909290507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633036111415760018151036110fc576002546001600160a01b03169182156110c2576080818051810103126110be57610dc060208201611483565b8460408301519181806080610dd760608801611483565b9601519260018060a01b031695610e2c604051610df381611241565b602181527f436f6e74726f6c6c65725661756c743a205265636569766564207061796c6f616020820152601960fa1b6040820152611497565b610e5f87604051610e3c81611226565b60118152702232b837b9b4ba37b9102937baba32b91d60791b60208201526114e6565b610e90604051610e6e81611226565b601081526f24b232b6b837ba32b731bc9025b2bc9d60811b6020820152611497565b610f0460405191838060208501946327b7cf8560e01b86528a602482015260248152610ebb81611241565b516a636f6e736f6c652e6c6f6795865afa5060405190610eda82611226565b600e82526d2a37b5b2b71020b2323932b9b99d60911b60208301526001600160a01b0316906114e6565b604051610f1081611226565b600c81526b2ab9b2b2102a37b5b2b7399d60a11b6020820152604051610f6781610f5360208201946309710a9d60e41b86526040602484015260648301906113d9565b88604483015203601f19810183528261125c565b51915afa506060610f8e6001600160a01b036040610f848961130c565b510151169661130c565b510151956040519063a9059cbb60e01b82526004820152866024820152602081604481868a5af180156110b357611077575b506002546001600160a01b031692833b1561107357606490836040519586948593632976e2bb60e11b8552600485015289602485015260448401525af180156107fa57611044575b5083526003602052604083209060005260205260406000208054918201809211611030575580f35b634e487b7160e01b83526011600452602483fd5b6001600160401b03819592951161105f576040529238611008565b634e487b7160e01b82526041600452602482fd5b8280fd5b6020813d6020116110ab575b816110906020938361125c565b810103126110735751801515036110a75738610fc0565b5080fd5b3d9150611083565b6040513d85823e3d90fd5b8380fd5b60405162461bcd60e51b815260206004820152601260248201527110dbdb9d1c9bdb1b195c881b9bdd081cd95d60721b6044820152606490fd5b60405162461bcd60e51b815260206004820152601960248201527f4578706563746564203120746f6b656e207472616e73666572000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152602260248201527f4d73672e73656e646572206973206e6f7420576f726d686f6c652052656c617960448201526132b960f11b6064820152608490fd5b6020906040516111a0816111f5565b8581528583820152856040820152856060820152856080820152828289010152016103a9565b81356001600160401b03811161072d576020916111ea839260243691890101611298565b815201910190610365565b60a081019081106001600160401b0382111761121057604052565b634e487b7160e01b600052604160045260246000fd5b604081019081106001600160401b0382111761121057604052565b606081019081106001600160401b0382111761121057604052565b90601f801991011681019081106001600160401b0382111761121057604052565b6001600160401b03811161121057601f01601f191660200190565b81601f820112156100c8578035906112af8261127d565b926112bd604051948561125c565b828452602083830101116100c857816000926020809301838601378301015290565b6001600160401b0381116112105760051b60200190565b600435906001600160a01b03821682036100c857565b8051156113195760200190565b634e487b7160e01b600052603260045260246000fd5b80518210156113195760209160051b010190565b519060ff821682036100c857565b519063ffffffff821682036100c857565b519061ffff821682036100c857565b60005b8381106113845750506000910152565b8181015183820152602001611374565b81601f820112156100c85780516113aa8161127d565b926113b8604051948561125c565b818452602082840101116100c8576113d69160208085019101611371565b90565b906020916113f281518092818552858086019101611371565b601f01601f1916010190565b801561147d57600190602081108216604e8210831617611475578190600a925b80821161144c57505081600019048111611436570290565b634e487b7160e01b600052601160045260246000fd5b9092806000190481116114365781841661146c575b800292811c9061141e565b80920291611461565b9050600a0a90565b50600190565b51906001600160a01b03821682036100c857565b600080916040516114d3816114c5602082019463104c13eb60e21b86526020602484015260448301906113d9565b03601f19810183528261125c565b51906a636f6e736f6c652e6c6f675afa50565b6000919082916114d36040518092611517602083019563319af33360e01b87526040602485015260648401906113d9565b6001600160a01b0391909116604483015203601f19810183528261125c56fea2646970667358221220ae3bf81973748002edec65db12fc63af86ff235e5e8eba120b29f901fd6bd8b264736f6c63430008190033";

type ControllerVaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ControllerVaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ControllerVault__factory extends ContractFactory {
  constructor(...args: ControllerVaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _wormholeRelayer: string,
    _tokenBridge: string,
    _wormhole: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ControllerVault> {
    return super.deploy(
      _wormholeRelayer,
      _tokenBridge,
      _wormhole,
      overrides || {}
    ) as Promise<ControllerVault>;
  }
  override getDeployTransaction(
    _wormholeRelayer: string,
    _tokenBridge: string,
    _wormhole: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _wormholeRelayer,
      _tokenBridge,
      _wormhole,
      overrides || {}
    );
  }
  override attach(address: string): ControllerVault {
    return super.attach(address) as ControllerVault;
  }
  override connect(signer: Signer): ControllerVault__factory {
    return super.connect(signer) as ControllerVault__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ControllerVaultInterface {
    return new utils.Interface(_abi) as ControllerVaultInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ControllerVault {
    return new Contract(address, _abi, signerOrProvider) as ControllerVault;
  }
}
