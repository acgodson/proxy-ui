/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC20Mock,
  ERC20MockInterface,
} from "../../ERC20Mock.sol/ERC20Mock";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "name",
        type: "string",
        internalType: "string",
      },
      {
        name: "symbol",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "DOMAIN_SEPARATOR",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "allowance",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "approve",
    inputs: [
      {
        name: "spender",
        type: "address",
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "balanceOf",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "burn",
    inputs: [
      {
        name: "from",
        type: "address",
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "decimals",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint8",
        internalType: "uint8",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "mint",
    inputs: [
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "name",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "nonces",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "permit",
    inputs: [
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
      {
        name: "spender",
        type: "address",
        internalType: "address",
      },
      {
        name: "value",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "deadline",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "v",
        type: "uint8",
        internalType: "uint8",
      },
      {
        name: "r",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "s",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "symbol",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "totalSupply",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "transfer",
    inputs: [
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "transferFrom",
    inputs: [
      {
        name: "from",
        type: "address",
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "Approval",
    inputs: [
      {
        name: "owner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "spender",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "value",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Transfer",
    inputs: [
      {
        name: "from",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "value",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
] as const;

const _bytecode =
  "0x60e0604090808252346103f157611015803803809161001e82856103f6565b8339810182828203126103f15781516001600160401b0393908481116103f1578261004a918501610419565b92602092838201518681116103f1576100639201610419565b8351938585116103db576000948061007b8754610488565b92601f9384811161038f575b50869084831160011461032c578892610321575b50508160011b916000199060031b1c19161785555b81519086821161030d5781906001936100c98554610488565b8281116102bd575b508691831160011461025e578792610253575b5050600019600383901b1c191690821b1781555b60126080524660a0528151845491818661011185610488565b92838352878301958882821691826000146102355750506001146101f9575b5061013d925003826103f6565b519020928151928301937f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f8552828401527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608401524660808401523060a084015260a0835260c0830194838610908611176101e5575083905251902060c052610b5290816104c3823960805181610631015260a0518161095a015260c051816109810152f35b634e487b7160e01b81526041600452602490fd5b8791508880528189209089915b85831061021d57505061013d935082010138610130565b80548388018501528694508993909201918101610206565b60ff1916885261013d95151560051b85010192503891506101309050565b0151905038806100e4565b8488528688208594509190601f198416895b898282106102a7575050841161028e575b505050811b0181556100f8565b015160001960f88460031b161c19169055388080610281565b8385015186558897909501949384019301610270565b909192508488528688208380860160051c820192898710610304575b91869588929594930160051c01915b8281106102f65750506100d1565b8a81558695508791016102e8565b925081926102d9565b634e487b7160e01b86526041600452602486fd5b01519050388061009b565b8880528789209250601f198416895b89828210610379575050908460019594939210610360575b505050811b0185556100b0565b015160001960f88460031b161c19169055388080610353565b600185968293968601518155019501930161033b565b9091508780528688208480850160051c8201928986106103d2575b9085949392910160051c01905b8181106103c45750610087565b8981558493506001016103b7565b925081926103aa565b634e487b7160e01b600052604160045260246000fd5b600080fd5b601f909101601f19168101906001600160401b038211908210176103db57604052565b919080601f840112156103f15782516001600160401b0381116103db576020906040519261045083601f19601f85011601856103f6565b8184528282870101116103f15760005b81811061047557508260009394955001015290565b8581018301518482018401528201610460565b90600182811c921680156104b8575b60208310146104a257565b634e487b7160e01b600052602260045260246000fd5b91607f169161049756fe6080604081815260048036101561001557600080fd5b600092833560e01c90816306fdde03146107a357508063095ea7b31461073557806318160ddd1461071657806323b872dd14610655578063313ce567146106175780633644e515146105f357806340c10f191461057857806370a08231146105405780637ecebe001461050857806395d89b4114610422578381639dc29fac146103c057508063a9059cbb1461034e578063d505accf1461010a5763dd62ed3e146100bf57600080fd5b3461010657816003193601126101065760209282916100dc610901565b6100e461091c565b6001600160a01b03918216845291865283832091168252845220549051908152f35b8280fd5b5091903461034a5760e036600319011261034a57610126610901565b9061012f61091c565b91604435606435926084359260ff84168094036103465742851061030357610155610955565b9560018060a01b038092169586895260209560058752848a209889549960018b01905585519285898501957f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c987528b89870152169a8b606086015288608086015260a085015260c084015260c0835260e0830167ffffffffffffffff94848210868311176102ef578188528451902061010085019261190160f01b845261010286015261012285015260428152610160840194818610908611176102dc57848752519020835261018082015260a4356101a082015260c4356101c0909101528780528490889060809060015afa156102d25786511696871515806102c9575b156102975786977f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259596975283528087208688528352818188205551908152a380f35b83606492519162461bcd60e51b8352820152600e60248201526d24a72b20a624a22fa9a4a3a722a960911b6044820152fd5b50848814610254565b81513d88823e3d90fd5b634e487b7160e01b8c5260418d5260248cfd5b50634e487b7160e01b8c5260418d5260248cfd5b815162461bcd60e51b81526020818a0152601760248201527f5045524d49545f444541444c494e455f455850495245440000000000000000006044820152606490fd5b8680fd5b5080fd5b50503461034a578060031936011261034a5760209161036b610901565b826024359133845260038652818420610385848254610932565b90556001600160a01b031680845260038652922080548201905582519081523390600080516020610afd833981519152908590a35160018152f35b80843461041f578060031936011261041f57600080516020610afd83398151915260206103eb610901565b6024359060018060a01b0316938486526003835280862061040d838254610932565b9055816002540360025551908152a380f35b50fd5b82843461050557806003193601126105055781519080600180549061044682610846565b80865292602092600181169081156104d85750600114610480575b61047c868861047282890383610880565b51918291826108b8565b0390f35b9350600184527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b8385106104c5575050505081016020016104728261047c86610461565b80548686018401529382019381016104a8565b905061047c9795508693506020925061047294915060ff191682840152151560051b820101929486610461565b80fd5b50503461034a57602036600319011261034a5760209181906001600160a01b03610530610901565b1681526005845220549051908152f35b50503461034a57602036600319011261034a5760209181906001600160a01b03610568610901565b1681526003845220549051908152f35b5034610106578160031936011261010657610591610901565b60243591600254908382018092116105e057506002556001600160a01b0316808452600360209081528385208054840190559251918252918391600080516020610afd8339815191529190a380f35b634e487b7160e01b865260119052602485fd5b50503461034a578160031936011261034a57602090610610610955565b9051908152f35b50503461034a578160031936011261034a576020905160ff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b50913461050557606036600319011261050557610670610901565b600080516020610afd83398151915261068761091c565b6001600160a01b03928316808552602087815286862033875281528686205490979194889360443593899385600182016106f3575b505050868852600385528288206106d4858254610932565b9055169586815260038452208181540190558551908152a35160018152f35b6106fc91610932565b90888a528652838920338a528652838920553880856106bc565b50503461034a578160031936011261034a576020906002549051908152f35b5034610106578160031936011261010657602092610751610901565b918360243592839233825287528181209460018060a01b0316948582528752205582519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925843392a35160018152f35b839085346105055780600319360112610505578054816107c282610846565b808552916020916001918281169081156104d857506001146107ef5761047c868861047282890383610880565b80809550527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b838510610833575050505081016020016104728261047c86610461565b8054868601840152938201938101610816565b90600182811c92168015610876575b602083101461086057565b634e487b7160e01b600052602260045260246000fd5b91607f1691610855565b90601f8019910116810190811067ffffffffffffffff8211176108a257604052565b634e487b7160e01b600052604160045260246000fd5b6020808252825181830181905290939260005b8281106108ed57505060409293506000838284010152601f8019910116010190565b8181018601518482016040015285016108cb565b600435906001600160a01b038216820361091757565b600080fd5b602435906001600160a01b038216820361091757565b9190820391821161093f57565b634e487b7160e01b600052601160045260246000fd5b6000467f0000000000000000000000000000000000000000000000000000000000000000036109a357507f000000000000000000000000000000000000000000000000000000000000000090565b604051815482916109b382610846565b808252816020948582019460019087600182169182600014610ade575050600114610a85575b506109e692500382610880565b51902091604051918201927f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f845260408301527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608301524660808301523060a083015260a0825260c082019082821067ffffffffffffffff831117610a71575060405251902090565b634e487b7160e01b81526041600452602490fd5b87805286915087907f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b858310610ac65750506109e69350820101386109d9565b80548388018501528694508893909201918101610aaf565b60ff191688526109e695151560051b85010192503891506109d9905056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220e90dcddfa0e80d99561280f5476b617ff64cae6c67dd39dc1c262b0a5efed31d64736f6c63430008190033";

type ERC20MockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20MockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20Mock__factory extends ContractFactory {
  constructor(...args: ERC20MockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name: string,
    symbol: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ERC20Mock> {
    return super.deploy(name, symbol, overrides || {}) as Promise<ERC20Mock>;
  }
  override getDeployTransaction(
    name: string,
    symbol: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(name, symbol, overrides || {});
  }
  override attach(address: string): ERC20Mock {
    return super.attach(address) as ERC20Mock;
  }
  override connect(signer: Signer): ERC20Mock__factory {
    return super.connect(signer) as ERC20Mock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20MockInterface {
    return new utils.Interface(_abi) as ERC20MockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20Mock {
    return new Contract(address, _abi, signerOrProvider) as ERC20Mock;
  }
}
